// Code generated by heidou , DO NOT EDIT.
package resolvers

import (
	"context"
	
	"{{ .Extra.pkgpath }}/internal/generated/models"
)
{{- $modelName := .Name}}
{{- $modelNameCamel := .NameCamel}}
{{- $modelLowerName := .NameLowerCamel}}

func (r *queryResolver) {{.NameCamelPlural}}OffsetBased(ctx context.Context, filter *models.{{.NameCamel}}FilterInput, orderBy *models.{{.NameCamel}}Order, offset *int, limit *int) (*models.{{.NameCamel}}Connection, error) {
	return r.{{.NameCamel}}Service.{{.NameCamelPlural}}OffsetBased(ctx, filter, orderBy, offset, limit)
}

func (r *queryResolver) {{.NameCamelPlural}}CursorBased(ctx context.Context, filter *models.{{.NameCamel}}FilterInput, orderBy *models.{{.NameCamel}}Order, before *models.Cursor, after *models.Cursor, first *int, last *int) (*models.{{.NameCamel}}Connection, error) {
	return r.{{.NameCamel}}Service.{{.NameCamelPlural}}CursorBased(ctx, filter, orderBy, before, after, first, last)
}

func (r *queryResolver) {{.NameCamel}}(ctx context.Context, id {{ .PrimaryKeyField.MetaType.GoType }}) (*models.{{.NameCamel}}, error) {
		return r.{{.NameCamel}}Service.{{.NameCamel}}(ctx, id)
}

func (r *mutationResolver) {{.NameCamel}}Create(ctx context.Context, input models.{{.NameCamel}}Input) (*models.{{.NameCamel}}Create, error) {
	return r.{{.NameCamel}}Service.{{.NameCamel}}Create(ctx, input)
}

func (r *mutationResolver) {{.NameCamel}}Delete(ctx context.Context, ids []*{{ .PrimaryKeyField.MetaType.GoType }}) (*models.{{.NameCamel}}Delete, error) {
	return r.{{.NameCamel}}Service.{{.NameCamel}}Delete(ctx, ids)
}

func (r *mutationResolver) {{.NameCamel}}Update(ctx context.Context, ids []*{{ .PrimaryKeyField.MetaType.GoType }}, input models.{{.NameCamel}}Input) (*models.{{.NameCamel}}Update, error) {
	return r.{{.NameCamel}}Service.{{.NameCamel}}Update(ctx, ids, input)
}
